"""add_shipment_items_table

Revision ID: 056b381ee2a8
Revises: 20251021_fix_timezone_labels
Create Date: 2025-10-27 12:25:45.910531

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '056b381ee2a8'
down_revision: Union[str, Sequence[str], None] = '20251021_fix_timezone_labels'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create shipment_items table (if it doesn't exist)
    try:
        op.create_table('shipment_items',
            sa.Column('shipment_item_id', sa.String(), nullable=False),
            sa.Column('shipment_id', sa.String(), nullable=False),
            sa.Column('item_id', sa.String(), nullable=False),
            sa.Column('quantity', sa.Integer(), nullable=True),
            sa.Column('what_is_being_shipped', sa.String(), nullable=False),
            sa.Column('remove_from_inventory', sa.Boolean(), nullable=True),
            sa.Column('notes', sa.Text(), nullable=True),
            sa.Column('date_created', sa.DateTime(), nullable=True),
            sa.ForeignKeyConstraint(['item_id'], ['inventory_items.item_id'], ),
            sa.ForeignKeyConstraint(['shipment_id'], ['shipments.shipment_id'], ),
            sa.PrimaryKeyConstraint('shipment_item_id')
        )
        op.create_index(op.f('ix_shipment_items_shipment_item_id'), 'shipment_items', ['shipment_item_id'], unique=False)
    except Exception:
        # Table already exists, skip creation
        pass
    op.alter_column('frontend_errors', 'error_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint('frontend_errors_error_id_key', 'frontend_errors', type_='unique')
    op.drop_index('ix_frontend_errors_timestamp', table_name='frontend_errors')
    op.drop_index('ix_frontend_logs_context', table_name='frontend_logs')
    op.drop_index('ix_frontend_logs_error_id', table_name='frontend_logs')
    op.drop_index('ix_frontend_logs_level', table_name='frontend_logs')
    op.drop_index('ix_frontend_logs_timestamp', table_name='frontend_logs')
    op.add_column('inventory_transactions', sa.Column('shipment_item_id', sa.String(), nullable=True))
    op.drop_constraint('inventory_transactions_shipment_id_fkey', 'inventory_transactions', type_='foreignkey')
    op.create_foreign_key(None, 'inventory_transactions', 'shipment_items', ['shipment_item_id'], ['shipment_item_id'])
    op.drop_column('inventory_transactions', 'shipment_id')
    op.alter_column('shipments', 'date_created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('shipments', 'date_shipped',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
    op.alter_column('site_equipment', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('site_equipment', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.drop_index('ix_sites_brand', table_name='sites')
    op.drop_index('ix_sites_location', table_name='sites')
    op.alter_column('sla_rules', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('sla_rules', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('tasks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('tasks', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('ticket_comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('ticket_comments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.drop_index('ix_tickets_customer_name', table_name='tickets')
    op.drop_index('ix_tickets_inc_number', table_name='tickets')
    op.drop_index('ix_tickets_notes', table_name='tickets')
    op.drop_index('ix_tickets_so_number', table_name='tickets')
    op.alter_column('time_entries', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('users', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_name', table_name='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop shipment_items table
    op.drop_index(op.f('ix_shipment_items_shipment_item_id'), table_name='shipment_items')
    op.drop_table('shipment_items')
    op.create_index('ix_users_name', 'users', ['name'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.alter_column('users', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('time_entries', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.create_index('ix_tickets_so_number', 'tickets', ['so_number'], unique=False)
    op.create_index('ix_tickets_notes', 'tickets', ['notes'], unique=False)
    op.create_index('ix_tickets_inc_number', 'tickets', ['inc_number'], unique=False)
    op.create_index('ix_tickets_customer_name', 'tickets', ['customer_name'], unique=False)
    op.alter_column('ticket_comments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('ticket_comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('tasks', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('tasks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('sla_rules', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('sla_rules', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.create_index('ix_sites_location', 'sites', ['location'], unique=False)
    op.create_index('ix_sites_brand', 'sites', ['brand'], unique=False)
    op.alter_column('site_equipment', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('site_equipment', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.alter_column('shipments', 'date_shipped',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column('shipments', 'date_created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("(now() AT TIME ZONE 'UTC'::text)"))
    op.add_column('inventory_transactions', sa.Column('shipment_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'inventory_transactions', type_='foreignkey')
    op.create_foreign_key('inventory_transactions_shipment_id_fkey', 'inventory_transactions', 'shipments', ['shipment_id'], ['shipment_id'])
    op.drop_column('inventory_transactions', 'shipment_item_id')
    op.create_index('ix_frontend_logs_timestamp', 'frontend_logs', ['timestamp'], unique=False)
    op.create_index('ix_frontend_logs_level', 'frontend_logs', ['level'], unique=False)
    op.create_index('ix_frontend_logs_error_id', 'frontend_logs', ['error_id'], unique=False)
    op.create_index('ix_frontend_logs_context', 'frontend_logs', ['context'], unique=False)
    op.create_index('ix_frontend_errors_timestamp', 'frontend_errors', ['timestamp'], unique=False)
    op.create_unique_constraint('frontend_errors_error_id_key', 'frontend_errors', ['error_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('frontend_errors', 'error_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
