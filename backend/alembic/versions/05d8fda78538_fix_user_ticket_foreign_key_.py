"""Fix User-Ticket foreign key relationships

Revision ID: 05d8fda78538
Revises: 
Create Date: 2025-07-25 15:36:16.551842

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '05d8fda78538'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('field_techs',
    sa.Column('field_tech_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('field_tech_id')
    )
    op.create_index(op.f('ix_field_techs_field_tech_id'), 'field_techs', ['field_tech_id'], unique=False)
    op.create_table('inventory_items',
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('sku', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('quantity_on_hand', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('barcode', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_index(op.f('ix_inventory_items_item_id'), 'inventory_items', ['item_id'], unique=False)
    op.create_table('sites',
    sa.Column('site_id', sa.String(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('brand', sa.String(), nullable=True),
    sa.Column('main_number', sa.String(), nullable=True),
    sa.Column('mp', sa.String(), nullable=True),
    sa.Column('service_address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('zip', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('site_id')
    )
    op.create_index(op.f('ix_sites_site_id'), 'sites', ['site_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('tech', 'dispatcher', 'billing', 'admin', name='userrole'), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('equipment',
    sa.Column('equipment_id', sa.String(), nullable=False),
    sa.Column('site_id', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('make_model', sa.String(), nullable=True),
    sa.Column('serial_number', sa.String(), nullable=True),
    sa.Column('install_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['sites.site_id'], ),
    sa.PrimaryKeyConstraint('equipment_id')
    )
    op.create_index(op.f('ix_equipment_equipment_id'), 'equipment', ['equipment_id'], unique=False)
    op.create_table('tickets',
    sa.Column('ticket_id', sa.String(), nullable=False),
    sa.Column('site_id', sa.String(), nullable=True),
    sa.Column('inc_number', sa.String(), nullable=True),
    sa.Column('so_number', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('inhouse', 'onsite', 'project', 'shipping', 'misc', name='tickettype'), nullable=False),
    sa.Column('status', sa.Enum('open', 'assigned', 'in_progress', 'pending', 'closed', 'awaiting_approval', name='ticketstatus'), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('assigned_user_id', sa.String(), nullable=True),
    sa.Column('onsite_tech_id', sa.String(), nullable=True),
    sa.Column('date_created', sa.Date(), nullable=False),
    sa.Column('date_scheduled', sa.Date(), nullable=True),
    sa.Column('date_closed', sa.Date(), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('color_flag', sa.String(), nullable=True),
    sa.Column('special_flag', sa.String(), nullable=True),
    sa.Column('last_updated_by', sa.String(), nullable=True),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['last_updated_by'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['onsite_tech_id'], ['field_techs.field_tech_id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.site_id'], ),
    sa.PrimaryKeyConstraint('ticket_id')
    )
    op.create_index(op.f('ix_tickets_ticket_id'), 'tickets', ['ticket_id'], unique=False)
    op.create_table('shipments',
    sa.Column('shipment_id', sa.String(), nullable=False),
    sa.Column('site_id', sa.String(), nullable=True),
    sa.Column('ticket_id', sa.String(), nullable=True),
    sa.Column('item_id', sa.String(), nullable=True),
    sa.Column('what_is_being_shipped', sa.String(), nullable=False),
    sa.Column('shipping_preference', sa.String(), nullable=True),
    sa.Column('charges_out', sa.Float(), nullable=True),
    sa.Column('charges_in', sa.Float(), nullable=True),
    sa.Column('tracking_number', sa.String(), nullable=True),
    sa.Column('return_tracking', sa.String(), nullable=True),
    sa.Column('date_shipped', sa.Date(), nullable=True),
    sa.Column('date_returned', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.item_id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['sites.site_id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.ticket_id'], ),
    sa.PrimaryKeyConstraint('shipment_id')
    )
    op.create_index(op.f('ix_shipments_shipment_id'), 'shipments', ['shipment_id'], unique=False)
    op.create_table('tasks',
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('ticket_id', sa.String(), nullable=True),
    sa.Column('assigned_user_id', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('open', 'in_progress', 'completed', name='taskstatus'), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.ticket_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_index(op.f('ix_tasks_task_id'), 'tasks', ['task_id'], unique=False)
    op.create_table('ticket_audits',
    sa.Column('audit_id', sa.String(), nullable=False),
    sa.Column('ticket_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('change_time', sa.DateTime(), nullable=True),
    sa.Column('field_changed', sa.String(), nullable=True),
    sa.Column('old_value', sa.String(), nullable=True),
    sa.Column('new_value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.ticket_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('audit_id')
    )
    op.create_index(op.f('ix_ticket_audits_audit_id'), 'ticket_audits', ['audit_id'], unique=False)
    op.create_table('inventory_transactions',
    sa.Column('transaction_id', sa.String(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('shipment_id', sa.String(), nullable=True),
    sa.Column('ticket_id', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('in_', 'out', 'adjust', name='inventorytransactiontype'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.item_id'], ),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipments.shipment_id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.ticket_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_index(op.f('ix_inventory_transactions_transaction_id'), 'inventory_transactions', ['transaction_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_inventory_transactions_transaction_id'), table_name='inventory_transactions')
    op.drop_table('inventory_transactions')
    op.drop_index(op.f('ix_ticket_audits_audit_id'), table_name='ticket_audits')
    op.drop_table('ticket_audits')
    op.drop_index(op.f('ix_tasks_task_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_shipments_shipment_id'), table_name='shipments')
    op.drop_table('shipments')
    op.drop_index(op.f('ix_tickets_ticket_id'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_index(op.f('ix_equipment_equipment_id'), table_name='equipment')
    op.drop_table('equipment')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_sites_site_id'), table_name='sites')
    op.drop_table('sites')
    op.drop_index(op.f('ix_inventory_items_item_id'), table_name='inventory_items')
    op.drop_table('inventory_items')
    op.drop_index(op.f('ix_field_techs_field_tech_id'), table_name='field_techs')
    op.drop_table('field_techs')
    # ### end Alembic commands ###
