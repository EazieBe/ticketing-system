"""enhance_ticket_system_with_new_types_and_fields

Revision ID: 92eb88ef9904
Revises: 1b19778c0ab8
Create Date: 2025-08-07 16:50:43.729691

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '92eb88ef9904'
down_revision: Union[str, Sequence[str], None] = '1b19778c0ab8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('site_equipment',
    sa.Column('equipment_id', sa.String(), nullable=False),
    sa.Column('site_id', sa.String(), nullable=True),
    sa.Column('equipment_type', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('part_number', sa.String(), nullable=True),
    sa.Column('serial_number', sa.String(), nullable=True),
    sa.Column('installation_date', sa.Date(), nullable=True),
    sa.Column('maintenance_notes', sa.Text(), nullable=True),
    sa.Column('rack_location', sa.String(), nullable=True),
    sa.Column('additional_details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['sites.site_id'], ),
    sa.PrimaryKeyConstraint('equipment_id')
    )
    op.create_index(op.f('ix_site_equipment_equipment_id'), 'site_equipment', ['equipment_id'], unique=False)
    op.create_table('ticket_attachments',
    sa.Column('attachment_id', sa.String(), nullable=False),
    sa.Column('ticket_id', sa.String(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('external_url', sa.String(), nullable=True),
    sa.Column('uploaded_by', sa.String(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.ticket_id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('attachment_id')
    )
    op.create_index(op.f('ix_ticket_attachments_attachment_id'), 'ticket_attachments', ['attachment_id'], unique=False)
    op.add_column('shipments', sa.Column('source_ticket_type', sa.String(), nullable=True))
    op.add_column('shipments', sa.Column('shipping_priority', sa.String(), nullable=True))
    op.add_column('shipments', sa.Column('parts_cost', sa.Float(), nullable=True))
    op.add_column('shipments', sa.Column('total_cost', sa.Float(), nullable=True))
    op.add_column('shipments', sa.Column('status', sa.String(), nullable=True))
    op.add_column('tickets', sa.Column('claimed_by', sa.String(), nullable=True))
    op.add_column('tickets', sa.Column('claimed_at', sa.DateTime(), nullable=True))
    op.add_column('tickets', sa.Column('check_in_time', sa.DateTime(), nullable=True))
    op.add_column('tickets', sa.Column('check_out_time', sa.DateTime(), nullable=True))
    op.add_column('tickets', sa.Column('onsite_duration_minutes', sa.Integer(), nullable=True))
    op.add_column('tickets', sa.Column('billing_rate', sa.Float(), nullable=True))
    op.add_column('tickets', sa.Column('total_cost', sa.Float(), nullable=True))
    # Create the enum type first, then handle priority enum type change
    op.execute("CREATE TYPE ticketpriority AS ENUM ('normal', 'critical', 'emergency')")
    op.execute("ALTER TABLE tickets ALTER COLUMN priority TYPE ticketpriority USING priority::text::ticketpriority")
    op.create_foreign_key(None, 'tickets', 'users', ['claimed_by'], ['user_id'])
    op.add_column('time_entries', sa.Column('hourly_rate', sa.Float(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('time_entries', 'hourly_rate')
    op.drop_constraint(None, 'tickets', type_='foreignkey')
    op.alter_column('tickets', 'priority',
               existing_type=sa.Enum('normal', 'critical', 'emergency', name='ticketpriority'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('tickets', 'total_cost')
    op.drop_column('tickets', 'billing_rate')
    op.drop_column('tickets', 'onsite_duration_minutes')
    op.drop_column('tickets', 'check_out_time')
    op.drop_column('tickets', 'check_in_time')
    op.drop_column('tickets', 'claimed_at')
    op.drop_column('tickets', 'claimed_by')
    op.drop_column('shipments', 'status')
    op.drop_column('shipments', 'total_cost')
    op.drop_column('shipments', 'parts_cost')
    op.drop_column('shipments', 'shipping_priority')
    op.drop_column('shipments', 'source_ticket_type')
    op.drop_index(op.f('ix_ticket_attachments_attachment_id'), table_name='ticket_attachments')
    op.drop_table('ticket_attachments')
    op.drop_index(op.f('ix_site_equipment_equipment_id'), table_name='site_equipment')
    op.drop_table('site_equipment')
    # ### end Alembic commands ###
